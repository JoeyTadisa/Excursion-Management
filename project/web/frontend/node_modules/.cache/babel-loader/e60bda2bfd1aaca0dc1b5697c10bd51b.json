{"ast":null,"code":"var _jsxFileName = \"/Users/lolaueda/Downloads/frontend/src/LoginForm.js\";\nimport React from \"react\";\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"./stores/UserStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setState = {\n      username: \" \",\n      password: \" \",\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [\"Log in\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username ? this.state.username : \" \",\n        onChange: val => this.setInputValue(\"username\", val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password ? this.state.password : \" \",\n        onChange: val => this.setInputValue(\"password\", val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/lolaueda/Downloads/frontend/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","setState","username","password","buttonDisabled","setInputValue","property","val","trim","length","resetForm","doLogin","state","res","fetch","method","headers","Accept","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"./stores/UserStore\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setState = {\n      username: \" \",\n      password: \" \",\n      buttonDisabled: false,\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    if (val.length > 12) {\n      return;\n    }\n    this.setState({\n      [property]: val,\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n    try {\n      let res = await fetch(\"login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n        }),\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        Log in\n        <InputField\n          type=\"text\"\n          placeholder=\"Username\"\n          value={this.state.username ? this.state.username : \" \"}\n          onChange={(val) => this.setInputValue(\"username\", val)}\n        />\n        <InputField\n          type=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password ? this.state.password : \" \"}\n          onChange={(val) => this.setInputValue(\"password\", val)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}