{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","userName","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","username","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","Accept","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","classname","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ed4752c.chunk.js","sourcesContent":["import { extendObservable } from \"mobx\";\n\nclass UserStore {\n  constructor() {\n    extendObservable(this, {\n      loading: true,\n      isLoggedIn: false,\n      userName: \" \",\n    });\n  }\n}\n\nexport default new UserStore();\n","import React from \"react\";\n\nclass InputField extends React.Component {\n  render() {\n    return (\n      <div className=\"inputField\">\n        <input\n          className=\"input\"\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={ (e) => this.props.onChange(e.target.value)  }\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputField;\n","import React from \"react\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    return (\n      <div className=\"submitButton\">\n        <button\n          className=\"btn\"\n          disabled={this.props.disabled}\n          onClick={() => this.props.onClick()}\n        >\n          {this.props.text}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport InputField from \"./InputField\";\nimport SubmitButton from \"./SubmitButton\";\nimport UserStore from \"./stores/UserStore\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    if (val.length > 12) {\n      return;\n    }\n    this.setState({\n      [property]: val,\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n\n    try {\n      let res = await fetch(\"/login\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n        }),\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        Log in\n        <InputField\n          type=\"text\"\n          placeholder=\"Username\"\n          value={this.state.username ? this.state.username : \"\"}\n          onChange={(val) => this.setInputValue(\"username\", val)}\n        />\n        <InputField\n          type=\"password\"\n          placeholder=\"Password\"\n          value={this.state.password ? this.state.password : \"\"}\n          onChange={(val) => this.setInputValue(\"password\", val)}\n        />\n        <SubmitButton\n          text=\"Login\"\n          disabled={this.state.buttonDisabled}\n          onClick={() => this.doLogin()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport UserStore from \"./stores/UserStore\";\nimport LoginForm from \"./LoginForm\";\nimport SubmitButton from \"./SubmitButton\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n      });\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  render() {\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div classname=\"container\">Loading, please wait ...</div>\n        </div>\n      );\n    } else {\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div classname=\"container\">\n              Welcome {UserStore.userName}\n              <SubmitButton\n                text={\"Log out\"}\n                disabled={false}\n                onClick={() => this.doLogout()}\n              />\n            </div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"app\">\n          <div classname=\"container\">\n            <LoginForm />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}